%-text-justify {
	// 作用于文本的父容器（即至少有一个父标签一个子标签）
	// 此为不支持 `text-align-last` 时的兼容方案
	// 伪元素会增加底部空白，故需将此父容器 `line-height` 设为 0
	// 再还原各子元素的 `line-height`
	line-height: 0;
	text-align: justify;
	&:after {
		content: '';
		display: inline-block;
		width: 100%;
		// 使之不产生空白
		// height: 0;
		// overflow: hidden;
		vertical-align: top;
	}
}

@mixin text-justify($line-height) {
	@extend %-text-justify;
	// 还原各子元素 line-height
	& > * {
		line-height: $line-height;
	}
}

%-flex-justify {
	display: flex;
	justify-content: space-between;

	> * {
		flex-grow: 0;
	}
}

@mixin flex-justify {
	@extend %-flex-justify;
}

%-inline-block {
	display: inline-block;
	*display: inline;
	*zoom: 1;
}

@mixin inline-block {
	@extend %-inline-block;
}

%-clear-float {
	zoom: 1;
	&:after {
		content: '';
		display: block;
		visibility: hidden;
		clear: both;
		height: 0;
	}
}

@mixin clear-float {
	@extend %-clear-float;
}

%-none-font {
	line-height: 0;
	font-size: 0;
	tab-size: 0;
}

@mixin none-font {
	@extend %-none-font;
}

%-absolute-center {
	position: absolute;
	top: 50%;
	left: 50%;
}

%-transform-center {
	@extend %-absolute-center;
	transform: translate3d(-50%, -50%, 0);
}

@mixin absolute-center($width, $height) {
	$margin-top: - $height / 2;
	$margin-left: - $width / 2;
	@extend %-absolute-center;
	width: $width;
	height: $height;
	margin: $margin-top 0 0 $margin-left;
}

@mixin transform-center($width, $height) {
	@extend %-transform-center;
	width: $width;
	height: $height;	
}

@mixin line-clip($line) {
	overflow: hidden;
	-webkit-: {
		line-clamp: $line;
		box-orient: vertical;
	}
}

@mixin media-mindpr($dpr) {

	@media only screen and (-webkit-min-device-pixel-ratio: #{$dpr}),
		only screen and (min--moz-device-pixel-ratio: #{$dpr}),
		only screen and (min-device-pixel-ratio: #{$dpr}),
		only screen and (min-resolution: #{$dpr*96}dpi),
		only screen and (min-resolution: #{$dpr}dppx) {
			@content;
	}
}